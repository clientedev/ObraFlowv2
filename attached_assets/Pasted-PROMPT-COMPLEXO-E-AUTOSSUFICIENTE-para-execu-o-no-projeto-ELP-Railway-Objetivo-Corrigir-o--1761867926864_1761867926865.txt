PROMPT COMPLEXO E AUTOSSUFICIENTE (para execu√ß√£o no projeto ELP / Railway)

üß© Objetivo:
Corrigir o erro psycopg2.errors.UndefinedColumn: column users.fcm_token does not exist,
adicionar notifica√ß√µes push internas e externas (Firebase FCM) com expira√ß√£o de 24h,
e garantir funcionamento mesmo com o app fechado ‚Äî usando Alembic e banco Railway.

1Ô∏è‚É£ Ajustar o Modelo User

Localize o arquivo models.py (ou onde o modelo User √© definido).

Adicione o campo fcm_token:

from datetime import datetime
from app import db

class User(db.Model):
    __tablename__ = "users"
    id = db.Column(db.Integer, primary_key=True)
    username = db.Column(db.String(80), unique=True, nullable=False)
    email = db.Column(db.String(120), unique=True, nullable=False)
    password_hash = db.Column(db.String(200))
    nome_completo = db.Column(db.String(200))
    cargo = db.Column(db.String(100))
    telefone = db.Column(db.String(20))
    is_master = db.Column(db.Boolean, default=False)
    is_developer = db.Column(db.Boolean, default=False)
    ativo = db.Column(db.Boolean, default=True)
    created_at = db.Column(db.DateTime, default=datetime.utcnow)

    # üîπ Novo campo para FCM
    fcm_token = db.Column(db.String(255), nullable=True)

2Ô∏è‚É£ Criar o arquivo Alembic

Crie e execute a migra√ß√£o no ambiente Railway:

flask db migrate -m "Add fcm_token to users"
flask db upgrade


üî∏ Isso gera um novo arquivo em migrations/versions/xxxx_add_fcm_token_to_users.py.

Certifique-se que o conte√∫do da revis√£o gerada contenha:

def upgrade():
    op.add_column('users', sa.Column('fcm_token', sa.String(length=255), nullable=True))

def downgrade():
    op.drop_column('users', 'fcm_token')

3Ô∏è‚É£ Criar Endpoint de Registro do Token

Em routes.py (ou main.py, conforme o projeto):

from flask import request, jsonify
from flask_login import login_required, current_user
from app import db

@app.route("/api/update_fcm_token", methods=["POST"])
@login_required
def update_fcm_token():
    try:
        token = request.json.get("fcm_token")
        if not token:
            return jsonify({"error": "Token ausente"}), 400
        current_user.fcm_token = token
        db.session.commit()
        return jsonify({"success": True}), 200
    except Exception as e:
        db.session.rollback()
        return jsonify({"error": str(e)}), 500

4Ô∏è‚É£ Configurar Firebase no Servidor

Instale as depend√™ncias:

pip install firebase-admin


Adicione o arquivo firebase_credentials.json (baixe do console Firebase ‚Üí Configura√ß√µes do projeto ‚Üí Contas de servi√ßo ‚Üí Chave privada).

Inicialize no in√≠cio do app.py:

import firebase_admin
from firebase_admin import credentials, messaging

cred = credentials.Certificate("firebase_credentials.json")
firebase_admin.initialize_app(cred)

5Ô∏è‚É£ Criar Fun√ß√£o Universal para Enviar Notifica√ß√µes
def send_push_notification(user, title, body):
    if not user or not user.fcm_token:
        return False
    message = messaging.Message(
        notification=messaging.Notification(title=title, body=body),
        token=user.fcm_token
    )
    try:
        messaging.send(message)
        return True
    except Exception as e:
        print(f"Erro ao enviar push: {e}")
        return False

6Ô∏è‚É£ Frontend (PWA / JS)

Crie ou edite o arquivo /static/js/notifications-manager.js:

import { initializeApp } from "https://www.gstatic.com/firebasejs/11.0.1/firebase-app.js";
import { getMessaging, getToken, onMessage } from "https://www.gstatic.com/firebasejs/11.0.1/firebase-messaging.js";

const firebaseConfig = {
  apiKey: "SUA_API_KEY",
  authDomain: "SEU_PROJETO.firebaseapp.com",
  projectId: "SEU_PROJETO",
  storageBucket: "SEU_PROJETO.appspot.com",
  messagingSenderId: "SEU_SENDER_ID",
  appId: "SEU_APP_ID",
};

const app = initializeApp(firebaseConfig);
const messaging = getMessaging(app);

Notification.requestPermission().then((permission) => {
  if (permission === "granted") {
    getToken(messaging, { vapidKey: "SUA_VAPID_KEY" }).then((token) => {
      if (token) {
        fetch("/api/update_fcm_token", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ fcm_token: token }),
        });
      }
    });
  }
});

// Mostra notifica√ß√£o quando o app est√° aberto
onMessage(messaging, (payload) => {
  new Notification(payload.notification.title, {
    body: payload.notification.body,
  });
});


Crie /static/firebase-messaging-sw.js:

importScripts("https://www.gstatic.com/firebasejs/11.0.1/firebase-app-compat.js");
importScripts("https://www.gstatic.com/firebasejs/11.0.1/firebase-messaging-compat.js");

firebase.initializeApp({
  messagingSenderId: "SEU_SENDER_ID",
  projectId: "SEU_PROJETO",
  appId: "SEU_APP_ID",
});

const messaging = firebase.messaging();
messaging.onBackgroundMessage((payload) => {
  const { title, body } = payload.notification;
  self.registration.showNotification(title, { body });
});

7Ô∏è‚É£ Teste e Verifica√ß√£o

Fa√ßa login ‚Üí verifique no banco Railway se users.fcm_token foi preenchido.

Envie teste manual:

curl -X POST https://fcm.googleapis.com/fcm/send \
 -H "Authorization: key=SEU_SERVER_KEY" \
 -H "Content-Type: application/json" \
 -d '{
   "to": "TOKEN_DO_USUARIO",
   "notification": {"title": "ELP", "body": "Notifica√ß√£o push ativa!"}
 }'


Se aparecer no celular mesmo com o app fechado ‚úÖ est√° corrigido.

8Ô∏è‚É£ Extras

Adicionar tabela notifications para hist√≥rico (opcional):

class Notification(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    user_id = db.Column(db.Integer, db.ForeignKey("users.id"))
    title = db.Column(db.String(100))
    body = db.Column(db.String(300))
    created_at = db.Column(db.DateTime, default=datetime.utcnow)
    expires_at = db.Column(db.DateTime)


Migra√ß√£o Alembic correspondente:

flask db migrate -m "create notifications table"
flask db upgrade


Exibir no app em aba de notifica√ß√µes (√≠cone de sino ao lado do menu hamburger).

üß© Resumo do problema resolvido
Causa	Solu√ß√£o
fcm_token ausente no banco	Migra√ß√£o Alembic ‚úÖ
Token n√£o sincronizado no frontend	Firebase JS + fetch /api/update_fcm_token ‚úÖ
Notifica√ß√µes n√£o aparecem com app fechado	firebase-messaging-sw.js configurado ‚úÖ
Backend sem envio push	firebase_admin.messaging implementado ‚úÖ