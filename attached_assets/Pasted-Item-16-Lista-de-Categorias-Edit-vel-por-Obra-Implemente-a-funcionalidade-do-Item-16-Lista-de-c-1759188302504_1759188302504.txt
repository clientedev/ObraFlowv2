Item 16 (Lista de Categorias/Edit√°vel por Obra)

Implemente a funcionalidade do Item 16 ‚Äì Lista de categorias deve ser edit√°vel por obra, garantindo que cada obra/projeto tenha sua pr√≥pria lista customiz√°vel (exemplo: Torre 1, Torre 2, √Årea Comum, Piscina).

üîπ Contexto

Hoje essa lista √© carregada de forma fixa/padr√£o, igual para todas as obras.

O cliente precisa que cada obra/projeto defina suas pr√≥prias categorias (3, 4, 7 ou qualquer n√∫mero).

Exemplo:

Obra A ‚Üí Torre 1, Torre 2, Piscina

Obra B ‚Üí Bloco A, Bloco B, Estacionamento, Cobertura

üîπ Altera√ß√µes necess√°rias

Banco de Dados (PostgreSQL via Alembic)

Criar uma nova tabela chamada categorias_obra (se j√° n√£o existir) com os campos:

id
projeto_id (FK -> projetos.id)
nome_categoria
ordem
created_at
updated_at


Cada registro corresponde a uma categoria personalizada de uma obra.

Criar migra√ß√£o Alembic de acordo com o revision mais recente.

Backend (Flask)

Criar rotas CRUD para gerenciar as categorias por obra:

/projetos/<int:projeto_id>/categorias         -> Listar categorias
/projetos/<int:projeto_id>/categorias/add     -> Adicionar categoria
/projetos/<int:projeto_id>/categorias/<id>/edit -> Editar categoria
/projetos/<int:projeto_id>/categorias/<id>/delete -> Excluir categoria


A API deve retornar apenas as categorias da obra selecionada.

Caso a obra ainda n√£o tenha categorias cadastradas, permitir herdar um conjunto padr√£o inicial (opcional).

Frontend (Templates + JS)

Na tela de configura√ß√£o de cada projeto/obra, adicionar uma se√ß√£o ‚ÄúCategorias da Obra‚Äù.

Exibir lista atual de categorias da obra, com op√ß√µes:

‚ûï Adicionar nova categoria

‚úèÔ∏è Editar categoria existente

üóë Excluir categoria

Na tela de upload/relat√≥rios, carregar somente as categorias da obra selecionada.

Integra√ß√£o com Relat√≥rios/Fotos

Quando o usu√°rio fizer upload de fotos, o campo ‚ÄúCategoria padr√£o para novas fotos‚Äù deve mostrar apenas as categorias cadastradas para aquela obra.

Garantir que os relat√≥rios daquela obra exibam corretamente as categorias usadas.

Regras de Neg√≥cio / Valida√ß√µes

N√£o permitir duplica√ß√£o de nomes dentro da mesma obra.

Ordem configur√°vel (exibir conforme campo ordem).

Se remover categoria que j√° tem fotos vinculadas, manter hist√≥rico (n√£o apagar em cascata).

üîπ Resultado esperado

Cada obra pode ter sua pr√≥pria lista de categorias personalizada.

O usu√°rio pode editar, adicionar ou excluir categorias sem impactar outras obras.

O upload de fotos e relat√≥rios exibe sempre as categorias corretas da obra atual.

Relat√≥rios antigos continuam √≠ntegros mesmo se a lista mudar.

üìå Resumo para dev:
Transformar a lista fixa de categorias em uma lista din√¢mica por obra, armazenada no banco (categorias_obra), com CRUD completo, rotas Flask, templates edit√°veis e integra√ß√£o total com relat√≥rios/fotos.