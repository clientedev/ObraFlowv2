Reformulação da edição de imagens (mobile)

Contexto:
A funcionalidade de edição de imagens nas telas Novo Relatório e Novo Relatório Express parou de funcionar corretamente em dispositivos mobile. No desktop está aceitável; no mobile o reconhecimento de toque e a manipulação de figuras (seta, círculo, retângulo, texto, pincel) está impreciso e com bugs. Anexei screenshots e um vídeo demonstrativo que mostram o comportamento atual — use-os como referência.

Objetivo (resumido):
Refatorar e reconstruir a funcionalidade de edição de imagens no mobile de forma profissional, robusta e responsiva, mantendo o comportamento desktop compatível. O editor mobile deve se comportar igual / com a mesma experiência do Figma mobile: inserir, mover, redimensionar, rotacionar, ajustar cor/tonalidade, alterar espessura, com toque extremamente preciso e sem falhas.

Escopo de entregáveis

Código-fonte pronto para rodar no Replit (ou branch/PR separado), com deploy funcional.

README com instruções de execução, dependências e como testar no mobile.

Vídeo curto (1–2 min) demonstrando todas as interações no mobile (add shape, mover, rotacionar, redimensionar, escolher cor, salvar/exportar).

Lista de testes executados e resultados; correções de bugs encontrados.

Commits claros e organizados; PR descrito com mudanças e justificativas.

Requisitos funcionais detalhados
Manipulação de objetos (obrigatório)

Inserção de objetos: seta/linha, círculo, retângulo, texto, ferramenta pincel (livre).

Seleção por toque (tap) com indicação visual clara (bounding box + handles).

Mover: arrastar com um dedo.

Redimensionar: pinch-to-zoom (gesto de pinça) e/ou handles de canto.

Rotacionar: gesto de rotação com dois dedos e handle de rotação opcional; rotação contínua e suave.

Editar texto: tocar para abrir teclado nativo e editar.

Pincel: desenho por toque com suavização (smoothing) e possibilidade de mudar espessura.

Multiseleção opcional (Shift não disponível em mobile — usar seleção por laço ou botão “Selecionar múltiplos”).

Interface / Layout (mobile)

Redesene levemente o layout mobile para ser limpo e acessível; não alterar radicalmente o desktop.

Único botão de cor: substituir controles de cor múltiplos por APENAS UM BOTÃO "Cor". Ao tocar, abrir um modal/overlay com um color picker tipo gradient que permita: escolher cor (hue), escolher tom/valor (shade), ajustar opacidade (alpha) e selecionar presets rápidos.

O color picker aplica a cor ao atributo correto (preenchimento ou contorno) dependendo da ferramenta ativa; indicar isso no UI.

Botões para: desfazer/refazer, limpar tudo, confirmar (Salvar Alterações) e cancelar. Esses botões devem ser grandes o suficiente para toque (mínimo 44x44dp recomendado).

Interação e precisão de toque

Interpretação de toque altamente precisa: evitar jitter e cliques falsos com thresholds configuráveis (ex.: ignorar movimentos < 4–6 px como toque).

Gestos multi-touch (pinch, rotate) estáveis e livres de “arrastar acidental”.

Ajuste de sensibilidade configurável (parâmetros commentados no código).

Suporte a toque em navegadores móveis modernos: Chrome Android, Safari iOS, Edge mobile.

Feedback visual imediato para cada ação (animações suaves sem lag).

Acessórios e configurações

Slider de espessura com preview do traço (valor visível em px).

Preview da cor atual no botão único “Cor”.

Undo / Redo (mínimo 20 passos).

Exportar/capturar imagem: geração PNG/JPEG com mesma resolução do canvas/área exibida e endpoint ou botão para salvar localmente.

Performance: manter interação fluida (ideal 60fps, mínimo aceitável 30fps em aparelhos mid-range durante manipulação).

Requisitos técnicos e sugestões (não obrigatório, mas recomendado)

Sugestões de bibliotecas: Konva.js (+ react-konva se o projeto usar React) ou Fabric.js — justificar a escolha técnica no PR. Essas bibliotecas já possuem suporte a transformações, handlers, e boa performance em canvas.

Código modular, testável e com comentários. Configurações de sensibilidade de toque e thresholds expostas em um único arquivo/config.

Compatibilidade com o stack atual do projeto (manter API de salvamento existente se houver).

Evitar usar soluções que requeiram plugins nativos (deve rodar apenas no navegador mobile).

Critérios de aceite / testes que o Replit deve executar antes de marcar como concluído

Funcionalidade básica: adicionar cada tipo de objeto e manipulá-lo (mover, redimensionar, rotacionar, excluir) com touch.

Color picker único: tocar no botão "Cor" abre o gradient picker; ao escolher cor e tonalidade, a seleção muda imediatamente.

Gestos: pinch para redimensionar, rotação com dois dedos, arrastar para mover — todos sem “saltos”.

Pincel: desenhar linhas suaves; alterar espessura funciona.

Undo/Redo: comando desfazer/refazer funcionando por pelo menos 20 passos.

Salvar/Exportar: exporta imagem correta e sem artefatos.

Performance: manipulação sem travamentos perceptíveis em um telefone Android/iOS mid-range.

Cross-browser: testado em Chrome Android e Safari iOS.

Documentação e demo: README atualizado + vídeo de demonstração anexo.

Observações finais / instruções ao time do Replit

ATENÇÃO: o sistema atualmente não funciona corretamente no mobile — não tentem “remendar” a implementação antiga; é preferível refatorar a base de interação para garantir precisão.

Mantenham a aparência desktop intacta sempre que possível; as mudanças principais são para melhorar o mobile.

Revisem o vídeo e as screenshots anexados antes de começar (eles mostram o problema e a expectativa de comportamento).

Entreguem um PR com changelog e instruções de testes manuais; anexe o vídeo de QA mostrando todos os testes do Critério de Aceite.

Se quiser, posso transformar este prompt em uma issue pronta (formatação Markdown para colar no Replit/GitHub Issues) incluindo checklist e templates de teste — diga apenas “gere issue”.