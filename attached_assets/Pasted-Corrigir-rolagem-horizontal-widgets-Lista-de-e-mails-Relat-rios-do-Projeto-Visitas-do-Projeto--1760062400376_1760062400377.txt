Corrigir rolagem horizontal — widgets: Lista de e-mails, Relatórios do Projeto, Visitas do Projeto (mobile)

Descrição curta (o que fazer)
Ajustar CSS/JS apenas para os contêineres abaixo de modo que não haja rolagem horizontal em mobile; que o conteúdo passe a quebrar/encaixar e tenha apenas rolagem vertical. Não alterar templates, lógica do backend ou outras telas.

Páginas / widgets afetados (conforme imagens):

Painel obra → Lista de E-mails de Clientes (widget azul/verde mostrado)

Painel obra → Relatórios do Projeto (lista de relatórios)

Painel obra → Visitas do Projeto (lista de visitas)

Arquivos/locais sugeridos para alteração (ex.: Replit repo):

static/css/mobile.css ou static/css/style.css (inserir patch CSS)

static/js/main.js ou static/js/ux-fixes.js (pequeno fallback JS, opcional)

Patch CSS (colar e testar)

Cole este CSS no arquivo de estilo mobile/base e teste. Substitua os seletores se o projeto usar outros nomes — a ideia é aplicar apenas aos containers específicos.

/* =========================
   UX-Fix: remover scroll horizontal
   Aplicar somente aos 3 widgets alvo
   ========================= */

.client-email-list,
.project-reports-list,
.project-visits-list {
  overflow-x: hidden !important;        /* remover scroll horizontal */
  overflow-y: auto !important;          /* permitir apenas scroll vertical */
  -webkit-overflow-scrolling: touch;     /* smooth scroll mobile */
  max-width: 100% !important;
  box-sizing: border-box !important;
}

/* garantir que elementos filhos não ultrapassem o contêiner */
.client-email-list * ,
.project-reports-list * ,
.project-visits-list * {
  max-width: 100% !important;
  box-sizing: border-box !important;
}

/* Tabelas: permitir wrap e evitar overflow */
.client-email-list table,
.project-reports-list table,
.project-visits-list table {
  table-layout: fixed !important;
  width: 100% !important;
  word-break: break-word !important;
}

.client-email-list th, .client-email-list td,
.project-reports-list th, .project-reports-list td,
.project-visits-list th, .project-visits-list td {
  white-space: normal !important;
  overflow-wrap: anywhere !important;
  word-break: break-word !important;
}

/* imagens e botões: não exceder largura do container */
.client-email-list img,
.project-reports-list img,
.project-visits-list img,
.client-email-list .btn,
.project-reports-list .btn,
.project-visits-list .btn {
  max-width: 100% !important;
  height: auto !important;
}

/* mobiles: espaçamentos seguros para evitar overflow por margens */
@media (max-width: 768px) {
  .client-email-list,
  .project-reports-list,
  .project-visits-list {
    padding-left: 12px;
    padding-right: 12px;
  }
}

Pequeno fallback JS (opcional — para forçar comportamento em runtime)

Adicione em static/js/ux-fixes.js e inclua no layout. Só usar se após o CSS persistir overflow por estilos inline/JS.

document.addEventListener('DOMContentLoaded', () => {
  const sels = ['.client-email-list', '.project-reports-list', '.project-visits-list'];
  sels.forEach(sel => {
    document.querySelectorAll(sel).forEach(el => {
      el.style.overflowX = 'hidden';
      el.style.overflowY = 'auto';
      el.style.maxWidth = '100%';
      // corrigir possíveis children com margin negativa que causam overflow
      el.querySelectorAll('*').forEach(ch => {
        const s = window.getComputedStyle(ch);
        if (parseFloat(s.marginLeft) < 0) ch.style.marginLeft = '0px';
        if (parseFloat(s.marginRight) < 0) ch.style.marginRight = '0px';
      });
    });
  });
});

Pontos de atenção / causas comuns (o que checar se continuar overflow)

Strings longas sem espaços (e-mails, nomes, hashes) — aplicar word-break: break-word; (já incluído).

Tabelas com min-width ou colunas fixas — remover min-width em CSS do componente e usar table-layout: fixed.

Imagens SVG ou iframes sem max-width — garantir max-width:100%.

Elementos com position: absolute + largura fixa — identificar e ajustar.

Plugins JS (DataTables/FullCalendar) podem forçar min-width — ative modo responsivo do plugin ou sobreponha CSS.

Testes mínimos obrigatórios (faça antes do PR)

Abrir a página da obra em Chrome mobile (devtools), Android real e APK.

Conferir sem rolagem horizontal nas 3 áreas citadas; verificar que a página ainda tem scroll vertical normal.

Testar todos os botões dentro desses widgets (Abrir, Continuar, PDF, Revisão, Agendar) — garantir que não perderam responsividade ou clique.

Testar com conteúdos extremos: e-mail longo, título longo, 10+ visitas/relatórios para checar wrapping.

Testar em iPhone (Safari) se possível.

Commit / PR

Commit message sugerida:
fix(ui): remove horizontal scroll on client-email, project-reports and project-visits widgets (mobile-only)

Incluir no PR descrição curta: "Patch CSS + optional JS fallback, targets only those 3 widgets; does not alter templates or backend."

Notas finais (importante, leia antes de aplicar)

Não altere outros templates ou componentes — este patch deve ficar contido ao CSS/JS dos três widgets.

Se o projeto usa classes diferentes, substitua .client-email-list, .project-reports-list, .project-visits-list pelos seletores reais do DOM (ex.: #projectEmailsPanel, .reports-widget, #visitsTable).

Se o plugin de tabela for DataTables, ative responsive: true + columns.autoWidth:false e remova min-width nas colunas.