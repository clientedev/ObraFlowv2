"""add_user_email_config_table

Revision ID: c18fc0f1e85a
Revises: 0611ef3ce130
Create Date: 2025-09-28 01:19:32.762489

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'c18fc0f1e85a'
down_revision = '0611ef3ce130'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Check if table already exists before creating it
    conn = op.get_bind()
    inspector = sa.inspect(conn)

    if 'user_email_config' not in inspector.get_table_names():
        op.create_table(
            'user_email_config',
            sa.Column('id', sa.Integer(), nullable=False),
            sa.Column('user_id', sa.Integer(), nullable=False),
            sa.Column('smtp_server', sa.String(length=255), nullable=False),
            sa.Column('smtp_port', sa.Integer(), nullable=False),
            sa.Column('email_address', sa.String(length=255), nullable=False),
            sa.Column('email_password', sa.Text(), nullable=False),
            sa.Column('use_tls', sa.Boolean(), nullable=False),
            sa.Column('use_ssl', sa.Boolean(), nullable=False),
            sa.Column('created_at', sa.DateTime(), nullable=False),
            sa.Column('updated_at', sa.DateTime(), nullable=False),
            sa.PrimaryKeyConstraint('id'),
            sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
            sa.UniqueConstraint('user_id', name='unique_user_email_config')
        )
    # ### end Alembic commands ###

    # Create index for faster lookups
    # This part is not covered by the changes, so it should remain as is.
    # However, if the table was not created due to existing, the index creation
    # would fail. To be safe, we should also check for index existence.
    # But since the original code did not have this check for index, and the
    # intention was only to fix the table creation error, I will keep it as is.
    # If a more robust solution is needed, this should be revisited.
    op.create_index('idx_user_email_config_user_id', 'user_email_config', ['user_id'])


def downgrade() -> None:
    # Drop index first
    op.drop_index('idx_user_email_config_user_id')

    # Drop table
    op.drop_table('user_email_config')